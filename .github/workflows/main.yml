# This is a basic workflow to help you get started with Actions

name: CI

# 控制动作将何时运行。
on:
  # 在push或pull请求事件时触发工作流，但只针对主分支
  push:
    branches: [ master ]
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
      - README.md
      - LICENSE
  pull_request:
    branches: [ master ]

  # 允许您从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 工作流运行由一个或多个作业组成，这些作业可以按顺序或并行运行
jobs:
  # 此工作流包含一个名为“构建”的作业。
  build:
    # 作业将在其上运行的运行器类型
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 8.x, 10.x, 12.x ]

    # 步骤表示将作为作业的一部分执行的任务序列
    steps:
      # 签出$GITHUB_WORKSPACE下的存储库，以便您的作业可以访问它
      - uses: actions/checkout@v2

      # 使用运行器shell运行单个命令
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }} #规定node.js版本(可不配置)

      - name: Install dependencies # 第二步，安装依赖
        run: npm install

      - name: Test # 第三步，测试程序
        run: npm run test

      # 使用运行程序shell运行一组命令
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Deploy to Server # 第四步，rsync推送文件
        uses: AEnterprise/rsync-deploy@v1.0  # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}   # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude='*.pyc'   # rsync参数，排除.pyc文件
          SERVER_PORT: '22'  # SSH端口
          FOLDER: ./*  # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }}  # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.SSH_USERNAME }}  # 引用配置，服务器登录名
          SERVER_DESTINATION: /opt/TechnosexualXC/   # 部署到目标文件夹
